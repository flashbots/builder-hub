name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  docker-image-service:
    name: Publish Service Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get tag and SHA version
        run: |
          GITHUB_REF=${GITHUB_REF#refs/*/}
          GIT_SHA=${GITHUB_SHA::7}
          BINARY_VERSION=${GITHUB_REF}/${GIT_SHA}
          echo "GITHUB_REF=${GITHUB_REF}" >> $GITHUB_ENV
          echo "GIT_SHA=${GIT_SHA}" >> $GITHUB_ENV
          echo "BINARY_VERSION=${BINARY_VERSION}" >> $GITHUB_ENV

      - name: Print versions
        run: |
          echo "GITHUB_REF: ${{ env.GITHUB_REF }}"
          echo "GIT_SHA: ${{ env.GIT_SHA }}"
          echo "BINARY_VERSION: ${{ env.BINARY_VERSION }}"

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            flashbots/builder-hub
            ghcr.io/${{ github.repository }}/builder-hub
          labels: org.opencontainers.image.source=${{ github.repositoryUrl }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.FLASHBOTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FLASHBOTS_DOCKERHUB_TOKEN }}

      - name: Set up QEMU (for multi-arch builds, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ env.BINARY_VERSION }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-image-db:
    name: Publish Database Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: flashbots/builder-hub-db
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.FLASHBOTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FLASHBOTS_DOCKERHUB_TOKEN }}

      - name: Set up QEMU (for multi-arch builds, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile.db
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
