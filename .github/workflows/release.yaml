name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  extract-version:
    name: Extract version
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}
    steps:
      - name: Extract version
        id: extract_version
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION="${GITHUB_REF_NAME}"
          else
            VERSION="$(echo ${GITHUB_SHA} | cut -c1-7)"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

  build-and-push:
    name: Build and Push Docker image
    needs: [extract-version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      VERSION: ${{ needs.extract-version.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch builds, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/builder-hub
          labels: org.opencontainers.image.source=${{ github.repositoryUrl }}
          tags: |
            type=sha
            type=semver,pattern={{version}},value=${{ env.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.VERSION }}
            type=semver,pattern={{major}},value=${{ env.VERSION }}
            
            # Also push "latest" if it's a full release (no '-' in version for rc/beta)
            type=raw,value=latest,enable=${{ !contains(env.VERSION, '-') }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
