name: Checks

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.24
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Run migrations
        run: for file in schema/*.sql; do psql "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable" -f $file; done

      - name: Run unit tests and generate the coverage report
        run: RUN_DB_TESTS=1 make test-race

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.24
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@v0.4.0

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@2025.1.1

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.64.8

      - name: Install NilAway
        run: go install go.uber.org/nilaway/cmd/nilaway@v0.0.0-20240821220108-c91e71c080b7

      - name: Lint
        run: make lint

      - name: Ensure go mod tidy runs without changes
        run: |
          go mod tidy
          git update-index -q --really-refresh
          git diff-index HEAD

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.24
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Integration test
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/6.1.1/hurl_6.1.1_amd64.deb
          sudo dpkg -i hurl_6.1.1_amd64.deb
          ./scripts/ci/integration-test.sh